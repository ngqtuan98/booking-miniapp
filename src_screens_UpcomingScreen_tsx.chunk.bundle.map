{"version":3,"file":"src_screens_UpcomingScreen_tsx.chunk.bundle","mappings":"yMAAA,gBACA,WACA,WACA,cAA6D,WAEvDA,EAAa,SAAH,OAAKC,EAAI,EAAJA,KAAI,OACvB,UAAC,EAAAC,KAAI,CAACC,KAAK,YAAW,WACpB,SAAC,EAAAD,KAAKE,MAAK,CACTC,aAAa,cACbC,gBAAgB,aAChBC,MAAUN,EAAKM,MAAK,MAAMN,EAAKO,SAC/BC,SAAaR,EAAKS,KAAI,IAAIT,EAAKU,KAC/BC,KAAM,SAAAC,GAAK,OAAI,SAAC,EAAAC,OAAOC,KAAI,iBAAKF,EAAK,CAAEG,KAAK,aAAa,KAE3D,UAAC,EAAAd,KAAKe,QAAO,YACX,SAAC,EAAAC,OAAM,CAACf,KAAK,OAAOgB,QAAS,WAAO,EAAE,SAAC,YAGvC,SAAC,EAAAD,OAAM,CAACf,KAAK,YAAYgB,QAAS,WAAO,EAAE,SAAC,oBAIzC,EAGHC,EAAgB,WAAH,OAAS,SAAC,EAAAC,QAAO,CAACC,MAAOC,EAAOC,SAAY,EAczDD,EAASE,EAAAA,WAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,gBAAiB,QAEnBC,iBAAkB,CAChBC,QAAS,IAEXP,QAAS,CACPK,gBAAiB,cACjBG,OAAQ,KAET,EAxBoB,WACrB,OACE,SAAC,EAAAC,SAAQ,CACPC,KAAMC,EAAAA,QAAiBD,KACvBlC,WAAYA,EACZoC,uBAAwBhB,EACxBE,MAAOC,EAAOI,UACdU,sBAAuBd,EAAOO,kBAGpC,EAgB8B,W","sources":["webpack:///./src/screens/UpcomingScreen.tsx"],"sourcesContent":["import React from 'react';\nimport {FlatList, StyleSheet} from 'react-native';\nimport {Avatar, Button, Card, Divider} from 'react-native-paper';\nimport upcomingBookings from '../data/upcomingBookings.json';\n\nconst renderItem = ({item}: any) => (\n  <Card mode=\"contained\">\n    <Card.Title\n      titleVariant=\"titleMedium\"\n      subtitleVariant=\"bodyMedium\"\n      title={`${item.title} â€¢ ${item.provider}`}\n      subtitle={`${item.date} ${item.time}`}\n      left={props => <Avatar.Icon {...props} icon=\"calendar\" />}\n    />\n    <Card.Actions>\n      <Button mode=\"text\" onPress={() => {}}>\n        Cancel\n      </Button>\n      <Button mode=\"contained\" onPress={() => {}}>\n        Reschedule\n      </Button>\n    </Card.Actions>\n  </Card>\n);\n\nconst renderDivider = () => <Divider style={styles.divider} />;\n\nconst UpcomingScreen = () => {\n  return (\n    <FlatList\n      data={upcomingBookings.data}\n      renderItem={renderItem}\n      ItemSeparatorComponent={renderDivider}\n      style={styles.container}\n      contentContainerStyle={styles.contentContainer}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  contentContainer: {\n    padding: 16,\n  },\n  divider: {\n    backgroundColor: 'transparent',\n    height: 8,\n  },\n});\n\nexport default UpcomingScreen;\n"],"names":["renderItem","item","Card","mode","Title","titleVariant","subtitleVariant","title","provider","subtitle","date","time","left","props","Avatar","Icon","icon","Actions","Button","onPress","renderDivider","Divider","style","styles","divider","StyleSheet","create","container","flex","backgroundColor","contentContainer","padding","height","FlatList","data","upcomingBookings","ItemSeparatorComponent","contentContainerStyle"],"sourceRoot":""}